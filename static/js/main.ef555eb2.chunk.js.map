{"version":3,"sources":["components/FeedbackOptions.module.css","components/Statistics.module.css","components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","App.js","index.js","components/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","title","stats","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","name","onClick","Section","children","section","Notification","message","prototypes","PropTypes","string","isRequired","App","state","handleClick","event","currentTarget","setState","prevState","this","countTotalFeedback","Object","keys","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,8ICuB7CC,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qCACC,oBAAIC,UAAWC,IAAOC,MAAtB,wBACW,oBAAGF,UAAWC,IAAOE,MAArB,mBAAmCR,KACnC,oBAAGK,UAAWC,IAAOE,MAArB,sBAAsCP,KACtC,oBAAGI,UAAWC,IAAOE,MAArB,kBAAkCN,KAClC,oBAAGG,UAAWC,IAAOE,MAArB,oBAAoCL,KAC5C,oBAAGE,UAAWC,IAAOE,MAArB,gCAAgDJ,EAAhD,W,iBCOOK,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,mCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAAQR,UAAWC,IAAOQ,OAAoBC,KAAK,SAASC,KAAMH,EAAQI,QAASN,EAAnF,SAAqGE,GAA/DA,S,gBCSvCK,EAbC,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACtB,OACI,sBAAKd,UAAWC,IAAOc,QAAvB,UACI,mBAAGf,UAAWC,IAAOC,MAArB,SAA6BA,IAC5BY,M,QCLPE,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mCACI,4BAAIA,OAKhBD,EAAaE,WAAa,CACtBD,Q,OAASE,EAAUC,OAAOC,YAGfL,QCoCAM,E,4MA5CfC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGN2B,YAAc,SAAAC,GACX,IAAMd,EAAOc,EAAMC,cAAcf,KACjC,EAAKgB,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBjB,EAAO,EAAKY,MAAMZ,GAAQ,Q,4CAK/B,WAAU,IAAD,EACyBkB,KAAKN,MAA5B5B,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IAChBiC,EAAqB,kBACzBnC,EAAOC,EAAUC,GAQjB,OAES,eAAC,EAAD,CAASK,MAAM,wBAAf,UACL,cAAC,EAAD,CAAiBG,QAAS0B,OAAOC,KAAKH,KAAKN,OAAQjB,gBAAiBuB,KAAKL,cACxEM,IAAuB,EACpB,cAAC,EAAD,CACInC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,IACX/B,mBAdZJ,EACIsC,KAAKC,MAAOvC,EAAKmC,IAAsB,KACrC,IAaM,cAAC,EAAD,CAAcb,QAAQ,6B,GAtCpBkB,a,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BhD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.ef555eb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1iQ94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2KU6X\",\"stats\":\"Statistics_stats__18B4k\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <>\r\n     <h1 className={styles.title}>Statistics</h1>\r\n                <p className={styles.stats}>Good: {good}</p>\r\n                <p className={styles.stats}>Neutral: {neutral}</p>\r\n                <p className={styles.stats}>Bad: {bad}</p>\r\n                <p className={styles.stats}>Total: {total}</p>\r\n        <p className={styles.stats}>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n)\r\n\r\nStatistics.propTypes = {\r\n        good: PropTypes.number.isRequired,\r\n        neutral: PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n        total: PropTypes.number.isRequired,\r\n        positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {options.map(option => (\r\n                <button className={styles.button}key={option} type='button' name={option} onClick={onLeaveFeedback}>{option}</button>))}\r\n            </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n        options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n        onLeaveFeedback : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Section.module.css\"\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.section}>\r\n            <p className={styles.title}>{title}</p>\r\n            {children} \r\n       </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n            </>\r\n    )\r\n}\r\n \r\nNotification.prototypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification","import React, { Component } from 'react';\r\nimport Statistics from \"./components/Statistics\"\r\nimport FeedbackOptions from \"./components/FeedbackOptions\"\r\nimport Section from \"./components/Section\";\r\nimport Notification from \"./components/Notification\"\r\n\r\nclass App extends Component{\r\nstate = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0\r\n  }\r\n  \r\n handleClick = event => {\r\n    const name = event.currentTarget.name;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      [name]: this.state[name] + 1\r\n    }));\r\n  };\r\n   \r\n\r\n  render() {\r\n     const { good, neutral, bad } = this.state;\r\n      const countTotalFeedback = () =>\r\n        good + neutral + bad;\r\n\r\n\r\n     const countPositiveFeedbackPercentage = ()=>\r\n    good\r\n      ? Math.round((good/countTotalFeedback())*100)\r\n        : 0;\r\n    \r\n        return (\r\n            \r\n                 <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.handleClick} />\r\n            {countTotalFeedback() > 0\r\n              ? <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={countTotalFeedback()}\r\n                positivePercentage={countPositiveFeedbackPercentage()} />\r\n              : <Notification message=\"No feedback given\" />\r\n            }\r\n               </Section>\r\n          )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Xnm_\",\"title\":\"Section_title__3fs6k\"};"],"sourceRoot":""}